# jsp01

JSP란?
==> Web Server가 가진 엔진으로 실행할 수 있는 언어는 따로 있는데,
	이것을 SSP(Server Side Page)라고 한다.
	SSP로 서버가 클라이언트에게 응답해줄 수 있는 문서를 만들 수 있다.

	[ 대표적인 SSP ]
	
		ASP(Active Server Page)
		==> 기본언어 : Visual Basic
		
		ASP.NET
		==> 기본언어 : C#
		
		PHP
		==> 기본언어 : CGI
		
		JSP
		==> 기본언어 : Java
		
	결론
	JSP는 서버가 클라이언트에게 응답할 문서를 만드는 언어다!
	
Web Server
==> Http 프로토콜에 의해, 클라이언트의 요청을 해결하는 서버
	ex) apache, tomcat, resin, IIS, engineX . . .

	이 중 JSP처럼 클라이언트의 요청에 따라,
	동적으로 응답문서를 만들어주는 어플리케이션
	이 실행 가능한 서버를 Web Aplication Server라 부른다. (줄여서 WAS)
	
  +	프로젝트와 서버를 만든 후엔...
  		server.xml
  		web.xml
  	파일들이 필요한 내용으로 되어있는지 확인해주자!
  	(인코딩은 UTF-8로 해주는 편이 좋다.)
  	
-----------------------------------------------------------------------
프로젝트 폴더의 구조

	src				: 프로젝트 기본 폴더.
					  프로젝트 관련 파일들의 최상위 폴더.
	src/main		: 실제 프로젝트 소스 코드들이 작성되는 폴더.
	src/main/java	: 프로젝트의 자바 소스코드들이 작성되는 폴더.
	src/main/webapp	: 프로젝트 뷰에 관련된 문서들이 저장되는 폴더.
					==> 실제 JSP, html, js, css 등의 응답에 필요한 문서가 작성됨
					
					그런데! 대문자로 작성된 폴더들이 있다.
						WEB-INF		: 서버 관련 설정 or 뷰가 저장된 자바클래스 등이 위치
						META-INF	: db 관련 문서가 위치
					얘네는 클라이언트에선 접근할 수 없는 폴더다.
					
  +	XML 파일이 모야
  	eXtensible Markup Language. 확장가능한 마크업 언어
  	(마크업 언어 : 태그로 이루어진 문서)
  	html도 이중 하나다.
  	
  	사용할 수 있는 태그들이 이미 정해져 있는 html에 반해,
  	xml의 경우 사용자 지정 태그를 생성하여 만든다.
  	주로 프로그램의 환경 설정을 목적으로 한다.
  	
  	프로그램 실행전 xml 파일을 읽고, 파일의 태그가 분석된다.
  	(이 작업은 이후 '피싱'으로 불린다.)
  	그리고 프로그램은 피싱된 결과를 이용한다.
  	
	결론
		어떤 프로그램의 시작환경을 구축하고 싶으면
		xml 파일 수정/생성으로 해결할 수 있다.
		
	  +	DTD / schema 문서
	  	피싱을 하기 위해서는
	  	해당 xml 파일을 구성한 태그들의 의미를 알아야 하는데,
		이 태그들의 속성을 지정하는 문서가 DTD 또는 schema 문서다.